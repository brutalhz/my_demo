name: CI-CD
on:
  push:
    branches: [main]


jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

        # install applicaion dependencies
      - name: Install dependencies
        run: |
           npm i --force

      - name: build
        run: |
          npm run build

  push_to_Docker_Hub:
    runs-on: ubuntu-latest
    needs: [build_test]

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REACTUSERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REACTUSERNAME }}/datachain-demo:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [push_to_Docker_Hub]

    steps:
      - name: Deploy to vps via SSH action
         uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.YC_HOST }}
          USERNAME: ${{ secrets.YC_USERNAME }}
          PORT: 22
          KEY: ${{ secrets.YC_PRIVATE_KEY }}
          script: |
            cd app/
            docker system prune -af
            docker compose down
            docker compose pull
            docker compose up --build --remove-orphans -d --force-recreate
